version: 0.2

phases:
  install:
    commands:
      - echo Installing dependencies...
      - echo Ensuring the repository is fully cloned...
      
  pre_build:
    commands:
      - echo "Fetching the latest changes..."
      
      # Ensure the latest code is pulled from the repository
      - git fetch --unshallow
      
      # Get the list of files changed in the latest commit (compared to the last build or commit)
      - CHANGED_FILES=$(git diff --name-only $(git rev-parse HEAD^1) HEAD)

      # Debugging: Print the list of changed files
      - echo "Changed files: $CHANGED_FILES"

      # Check if any files in the Node.js directory were changed
      - |
        if echo "$CHANGED_FILES" | grep -q "^nodejs"; then
          echo "Node.js directory has changes. Running Node.js build...";
          RUN_NODEJS=true;
        fi
        
      # Check if any files in the Python directory were changed
      - |
        if echo "$CHANGED_FILES" | grep -q "^python="; then
          echo "Python directory has changes. Running Python build...";
          RUN_PYTHON=true;
        fi

  build:
    commands:
      - echo "Starting build..."
      
      # If Node.js directory has changes, run the Node.js build steps
      - |
        if [ "$RUN_NODEJS" = "true" ]; then
          echo "Building Node.js app...";
          cd nodejs;
          docker build -t nodejs-hello-world .;
        fi

      # If Python directory has changes, run the Python build steps
      - |
        if [ "$RUN_PYTHON" = "true" ]; then
          echo "Building Python app...";
          cd python;
          docker build -t python-hello-world .;
        fi

  post_build:
    commands:
      - echo Build completed.
